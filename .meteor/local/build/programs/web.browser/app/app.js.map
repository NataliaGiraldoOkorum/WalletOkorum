{"version":3,"sources":["meteor://ðŸ’»app/imports/api/ContactsCollection.js","meteor://ðŸ’»app/imports/ui/App.jsx","meteor://ðŸ’»app/imports/ui/ContactForm.jsx","meteor://ðŸ’»app/imports/ui/ContactList.jsx","meteor://ðŸ’»app/client/main.jsx"],"names":["ContactsCollection","Mongo","Collection","App","_c","$RefreshReg$","ContactForm","_s","name","setName","useState","email","setEmail","imageURL","setImageURL","saveContact","console","log","insert","e","target","value","ContactList","contacts","useTracker","find","fetch","map","contact","Meteor","startup","container","document","getElementById","root","createRoot","render"],"mappings":";;;;;;;;;;;;;;;;wBAEeA,kBAAkB,GAAG,IAAIC,KAAK,CAACC,UAAU,CAAC,UAAU,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECE7D,MAAMC,GAAG,GAAG,mBACjB,8CACE,gCAAI,gBAAc,CAAI,eACtB,oBAAC,WAAW,sBACZ,oBAAC,WAAW,QAEf;EAACC,KANWD,GAAG;EAAA;EAAAE;AAAA,qB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECDT,MAAMC,WAAW,GAAG,MAAM;IAAAC;IAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;IACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;IACtC,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;IAG5C,MAAMK,WAAW,GAAG,MAAM;MACxBC,OAAO,CAACC,GAAG,CAAC;QAAET,IAAI;QAAEG,KAAK;QAAEE;MAAS,CAAC,CAAC;MACtCb,kBAAkB,CAACkB,MAAM,CAAC;QAAEV,IAAI;QAAEG,KAAK;QAAEE;MAAS,CAAC,CAAC;MACpDJ,OAAO,CAAC,EAAE,CAAC;MACXG,QAAQ,CAAC,EAAE,CAAC;MACZE,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC;IAED,oBACE,+CACE,8CACE;MAAO,OAAO,EAAC;IAAM,SAErB,CAAO,eACP;MAAO,EAAE,EAAC,MAAM;MACd,KAAK,EAAEN,IAAK;MACZ,QAAQ,EAAGW,CAAC,IAAKV,OAAO,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MACzC,IAAI,EAAC;IAAM,GACV,eACL,8CACE;MAAO,OAAO,EAAC;IAAO,GAAC,OAAK,CAAO,eACnC;MACE,IAAI,EAAC,OAAO;MACZ,KAAK,EAAEV,KAAM;MACb,QAAQ,EAAGQ,CAAC,IAAKP,QAAQ,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAC1C,EAAE,EAAC;IAAO,GACT,eACL,8CACE;MAAO,OAAO,EAAC;IAAU,GAAC,WAAS,CAAO,eAC1C;MACE,IAAI,EAAC,MAAM;MACX,KAAK,EAAER,QAAS;MAChB,QAAQ,EAAGM,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAC7C,EAAE,EAAC;IAAU,GACZ,eACL,8CACE;MAAQ,IAAI,EAAC,QAAQ;MAAC,OAAO,EAAEN;IAAY,GAAC,cAAY,CAAQ,CAC7D,CACA;EAEX,CAAC;EAAAR,GA9CYD,WAAW;EAAAF,KAAXE,WAAW;EAAA;EAAAD;AAAA,qB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECEjB,MAAMiB,WAAW,GAAG,MAAM;IAAAf;IAC7B,MAAMgB,QAAQ,GAAEC,UAAU,CAAC,MAAM;MAC/B,OAAOxB,kBAAkB,CAACyB,IAAI,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK,EAAE,CAAC,CAAC;IAC9C,CAAC,CAAC;;IACF,oBACI,uDACI,gCAAI,cAAY,CAAI,EACnBH,QAAQ,CAACI,GAAG,CAACC,OAAO,iBACjB;MAAI,GAAG,EAAGA,OAAO,CAACjB;IAAM,GAAEiB,OAAO,CAACpB,IAAI,EAAC,KAAG,EAACoB,OAAO,CAACjB,KAAK,CAC3D,CAAC,CACH;EAEX,CAAC;EAAAJ,GAZYe,WAAW;IAAA,QACJE,UAAU;EAAA;EAAApB,KADjBkB,WAAW;EAAA;EAAAjB;AAAA,qB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECAxBwB,MAAM,CAACC,OAAO,CAAC,MAAM;IACnB,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;IACzD,MAAMC,IAAI,GAAGC,UAAU,CAACJ,SAAS,CAAC;IAClCG,IAAI,CAACE,MAAM,eAAC,oBAAC,GAAG,OAAG,CAAC;EACtB,CAAC,CAAC;AAAA,qB","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nexport default ContactsCollection = new Mongo.Collection('contacts');","import React from 'react';\nimport { ContactForm } from './ContactForm';\nimport { ContactList} from './ContactList';\n\nexport const App = () => (\n  <div>\n    <h1>Meteor Wallet </h1>\n    <ContactForm />\n    <ContactList/>\n  </div>\n);\n","import React, { useState } from 'react';\nimport ContactsCollection from \"../api/ContactsCollection\";\n\nexport const ContactForm = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [imageURL, setImageURL] = useState(\"\");\n\n\n  const saveContact = () => {\n    console.log({ name, email, imageURL });\n    ContactsCollection.insert({ name, email, imageURL })\n    setName(\"\");\n    setEmail(\"\");\n    setImageURL(\"\");\n  }\n\n  return (\n    <form>\n      <div>\n        <label htmlFor=\"name\">\n          Name\n        </label>\n        <input id=\"name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          type=\"text\" />\n      </div>\n      <div>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          id=\"email\" />\n      </div>\n      <div>\n        <label htmlFor=\"imageURL\">Image URL</label>\n        <input\n          type=\"text\"\n          value={imageURL}\n          onChange={(e) => setImageURL(e.target.value)}\n          id=\"imageURL\" />\n      </div>\n      <div>\n        <button type=\"button\" onClick={saveContact}>Save Contact</button>\n      </div>\n    </form>\n  )\n}","import React from \"react\";\nimport ContactsCollection from \"../api/ContactsCollection\";\nimport { useTracker } from 'meteor/react-meteor-data';\n\n\nexport const ContactList = () => {\n    const contacts= useTracker(() => {\n      return ContactsCollection.find({}).fetch(); //Tracker \n    }) \n    return (\n        <>\n            <h3>Contact List</h3>\n            {contacts.map(contact => (\n                <li key ={contact.email}>{contact.name} - {contact.email}</li>\n            ))}\n        </>\n    )\n}","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Meteor } from 'meteor/meteor';\nimport { App } from '/imports/ui/App';\n\nMeteor.startup(() => {\n  const container = document.getElementById('react-target');\n  const root = createRoot(container);\n  root.render(<App />);\n});\n"]}