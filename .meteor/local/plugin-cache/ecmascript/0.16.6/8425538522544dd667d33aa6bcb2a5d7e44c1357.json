{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/okorumdev/Documentos/meteor/meteor-wallet/imports/api/ContactsMethods.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/api/ContactsMethods.js","filename":"/home/okorumdev/Documentos/meteor/meteor-wallet/imports/api/ContactsMethods.js","inputSourceMap":{"version":3,"names":["ContactsCollection","Meteor","check","ImportContactsRounded","methods","name","email","imageURL","walletId","String","Error","insert","createdAt","Date","contactId","remove","update","_id","$set","archived"],"sources":["imports/api/ContactsMethods.js"],"sourcesContent":["import ContactsCollection from \"./ContactsCollection\";\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport { ImportContactsRounded } from \"@mui/icons-material\";\n\nMeteor.methods({\n   'contacts.insert'({ name, email, imageURL, walletId }) {\n        check(name, String);\n        check(email, String);\n        check(imageURL, String);\n        check(walletId, String);\n\n        if (!name) {\n            throw new Meteor.Error(\"Name is required\");\n        }\n        if (!walletId) {\n            throw new Meteor.Error(\"Wallet ID is required\");\n        }\n        return ContactsCollection.insert({ name, email, imageURL, createdAt: new Date() });\n    },\n    'contacts.remove'({contactId}){\n        check(contactId, String);\n        ContactsCollection.remove(contactId);        \n    },\n    'contacts.archive'({ contactId }){\n        check(contactId, String );\n        ContactsCollection.update({ _id: contactId}, {$set: { archived: true}});\n    }\n})\n\n"],"mappings":";AAAA,OAAOA,kBAAkB,MAAM,sBAAsB;AACrD,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,KAAK,QAAQ,cAAc;AACpC,SAASC,qBAAqB,QAAQ,qBAAqB;AAE3DF,MAAM,CAACG,OAAO,CAAC;EACZ,iBAAiB,CAAC;IAAEC,IAAI;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAS,CAAC,EAAE;IAClDN,KAAK,CAACG,IAAI,EAAEI,MAAM,CAAC;IACnBP,KAAK,CAACI,KAAK,EAAEG,MAAM,CAAC;IACpBP,KAAK,CAACK,QAAQ,EAAEE,MAAM,CAAC;IACvBP,KAAK,CAACM,QAAQ,EAAEC,MAAM,CAAC;IAEvB,IAAI,CAACJ,IAAI,EAAE;MACP,MAAM,IAAIJ,MAAM,CAACS,KAAK,CAAC,kBAAkB,CAAC;IAC9C;IACA,IAAI,CAACF,QAAQ,EAAE;MACX,MAAM,IAAIP,MAAM,CAACS,KAAK,CAAC,uBAAuB,CAAC;IACnD;IACA,OAAOV,kBAAkB,CAACW,MAAM,CAAC;MAAEN,IAAI;MAAEC,KAAK;MAAEC,QAAQ;MAAEK,SAAS,EAAE,IAAIC,IAAI;IAAG,CAAC,CAAC;EACtF,CAAC;EACD,iBAAiB,CAAC;IAACC;EAAS,CAAC,EAAC;IAC1BZ,KAAK,CAACY,SAAS,EAAEL,MAAM,CAAC;IACxBT,kBAAkB,CAACe,MAAM,CAACD,SAAS,CAAC;EACxC,CAAC;EACD,kBAAkB,CAAC;IAAEA;EAAU,CAAC,EAAC;IAC7BZ,KAAK,CAACY,SAAS,EAAEL,MAAM,CAAE;IACzBT,kBAAkB,CAACgB,MAAM,CAAC;MAAEC,GAAG,EAAEH;IAAS,CAAC,EAAE;MAACI,IAAI,EAAE;QAAEC,QAAQ,EAAE;MAAI;IAAC,CAAC,CAAC;EAC3E;AACJ,CAAC,CAAC"},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/okorumdev/Documentos/meteor/meteor-wallet","root":"/home/okorumdev/Documentos/meteor/meteor-wallet","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"_exploded":{},"_verified":{},"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"MemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/home/okorumdev/Documentos/meteor/meteor-wallet/imports/api/ContactsMethods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/ContactsMethods.js"}},"code":"!function (module1) {\n  var ContactsCollection;\n  module1.link(\"./ContactsCollection\", {\n    \"default\": function (v) {\n      ContactsCollection = v;\n    }\n  }, 0);\n  var Meteor;\n  module1.link(\"meteor/meteor\", {\n    Meteor: function (v) {\n      Meteor = v;\n    }\n  }, 1);\n  var check;\n  module1.link(\"meteor/check\", {\n    check: function (v) {\n      check = v;\n    }\n  }, 2);\n  var ImportContactsRounded;\n  module1.link(\"@mui/icons-material\", {\n    ImportContactsRounded: function (v) {\n      ImportContactsRounded = v;\n    }\n  }, 3);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  Meteor.methods({\n    'contacts.insert': function (_ref) {\n      var name = _ref.name,\n        email = _ref.email,\n        imageURL = _ref.imageURL,\n        walletId = _ref.walletId;\n      check(name, String);\n      check(email, String);\n      check(imageURL, String);\n      check(walletId, String);\n      if (!name) {\n        throw new Meteor.Error(\"Name is required\");\n      }\n      if (!walletId) {\n        throw new Meteor.Error(\"Wallet ID is required\");\n      }\n      return ContactsCollection.insert({\n        name: name,\n        email: email,\n        imageURL: imageURL,\n        createdAt: new Date()\n      });\n    },\n    'contacts.remove': function (_ref2) {\n      var contactId = _ref2.contactId;\n      check(contactId, String);\n      ContactsCollection.remove(contactId);\n    },\n    'contacts.archive': function (_ref3) {\n      var contactId = _ref3.contactId;\n      check(contactId, String);\n      ContactsCollection.update({\n        _id: contactId\n      }, {\n        $set: {\n          archived: true\n        }\n      });\n    }\n  });\n}.call(this, module);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;EAKAA,MAAM,CAACC,OAAO,CAAC;IACZ,iBAAiB,kBAAsC;MAAA,IAAnCC,IAAI,QAAJA,IAAI;QAAEC,KAAK,QAALA,KAAK;QAAEC,QAAQ,QAARA,QAAQ;QAAEC;MACtCC,KAAK,CAACJ,IAAI,EAAEK,MAAM,CAAC;MACnBD,KAAK,CAACH,KAAK,EAAEI,MAAM,CAAC;MACpBD,KAAK,CAACF,QAAQ,EAAEG,MAAM,CAAC;MACvBD,KAAK,CAACD,QAAQ,EAAEE,MAAM,CAAC;MAEvB,IAAI,CAACL,IAAI,EAAE;QACP,MAAM,IAAIF,MAAM,CAACQ,KAAK,CAAC,kBAAkB,CAAC;MAC9C;MACA,IAAI,CAACH,QAAQ,EAAE;QACX,MAAM,IAAIL,MAAM,CAACQ,KAAK,CAAC,uBAAuB,CAAC;MACnD;MACA,OAAOC,kBAAkB,CAACC,MAAM,CAAC;QAAER,IAAI,EAAJA,IAAI;QAAEC,KAAK,EAALA,KAAK;QAAEC,QAAQ,EAARA,QAAQ;QAAEO,SAAS,EAAE,IAAIC,IAAI;MAAG,CAAC,CAAC;IACtF,CAAC;IACD,iBAAiB,mBAAa;MAAA,IAAXC;MACfP,KAAK,CAACO,SAAS,EAAEN,MAAM,CAAC;MACxBE,kBAAkB,CAACK,MAAM,CAACD,SAAS,CAAC;IACxC,CAAC;IACD,kBAAkB,mBAAe;MAAA,IAAZA;MACjBP,KAAK,CAACO,SAAS,EAAEN,MAAM,CAAE;MACzBE,kBAAkB,CAACM,MAAM,CAAC;QAAEC,GAAG,EAAEH;MAAS,CAAC,EAAE;QAACI,IAAI,EAAE;UAAEC,QAAQ,EAAE;QAAI;MAAC,CAAC,CAAC;IAC3E;EACJ,CAAC,CAAC;AAAA","names":["Meteor","methods","name","email","imageURL","walletId","check","String","Error","ContactsCollection","insert","createdAt","Date","contactId","remove","update","_id","$set","archived"],"sources":["imports/api/ContactsMethods.js"],"sourcesContent":["import ContactsCollection from \"./ContactsCollection\";\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport { ImportContactsRounded } from \"@mui/icons-material\";\n\nMeteor.methods({\n   'contacts.insert'({ name, email, imageURL, walletId }) {\n        check(name, String);\n        check(email, String);\n        check(imageURL, String);\n        check(walletId, String);\n\n        if (!name) {\n            throw new Meteor.Error(\"Name is required\");\n        }\n        if (!walletId) {\n            throw new Meteor.Error(\"Wallet ID is required\");\n        }\n        return ContactsCollection.insert({ name, email, imageURL, createdAt: new Date() });\n    },\n    'contacts.remove'({contactId}){\n        check(contactId, String);\n        ContactsCollection.remove(contactId);        \n    },\n    'contacts.archive'({ contactId }){\n        check(contactId, String );\n        ContactsCollection.update({ _id: contactId}, {$set: { archived: true}});\n    }\n})\n\n"]},"sourceType":"module","externalDependencies":{},"hash":"8425538522544dd667d33aa6bcb2a5d7e44c1357"}
