{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/okorumdev/Documentos/meteor/meteor-wallet/imports/ui/ContactList.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/ui/ContactList.jsx","filename":"/home/okorumdev/Documentos/meteor/meteor-wallet/imports/ui/ContactList.jsx","inputSourceMap":{"version":3,"names":["React","ContactsCollection","useTracker","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","ContactList","contacts","find","sort","createdAt","fetch","width","maxWidth","bgcolor","map","person","personIdx","imageURL","name","display","email"],"sources":["imports/ui/ContactList.jsx"],"sourcesContent":["import React from \"react\";\nimport ContactsCollection from \"../api/ContactsCollection\";\nimport { useTracker } from 'meteor/react-meteor-data';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\n\n\nexport const ContactList = () => {\n    const contacts= useTracker(() => {\n      return ContactsCollection.find({},  {sort: { createdAt: -1 }}).fetch(); //Tracker \n    });\n    return (    \n        <div>\n            <h3>Contact List</h3>\n                <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n                    {contacts.map((person,personIdx) => (\n                        <ListItem alignItems=\"flex-start\" key={personIdx}>\n                        <ListItemAvatar>\n                            <Avatar alt=\"\" src={person.imageURL}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={person.name}\n                            secondary={\n                            <React.Fragment>\n                                <Typography\n                                    sx={{ display: 'inline' }}\n                                    component=\"span\"\n                                    variant=\"body2\"\n                                    color=\"text.primary\"\n                                    >\n                                    {person.email}\n                                </Typography>\n                            </React.Fragment>\n                            }\n                        ></ListItemText>    \n                    </ListItem>\n                    ))}                  \n                </List>\n    </div>\n    )\n}\n      \n            // <>\n        //     <h3>Contact List</h3>\n        //     {contacts.map(contact => (\n        //         <li key ={contact.email}>{contact.name} - {contact.email}</li>\n        //     ))}\n        // </>"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,kBAAkB,MAAM,2BAA2B;AAC1D,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AAGjD,OAAO,MAAMC,WAAW,GAAG,MAAM;EAAA;EAC7B,MAAMC,QAAQ,GAAET,UAAU,CAAC,MAAM;IAC/B,OAAOD,kBAAkB,CAACW,IAAI,CAAC,CAAC,CAAC,EAAG;MAACC,IAAI,EAAE;QAAEC,SAAS,EAAE,CAAC;MAAE;IAAC,CAAC,CAAC,CAACC,KAAK,EAAE,CAAC,CAAC;EAC1E,CAAC,CAAC;;EACF,OACI,CAAC,GAAG;AACZ,YAAY,CAAC,EAAE,CAAC,YAAY,EAAE,EAAE;AAChC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;MAAEC,KAAK,EAAE,MAAM;MAAEC,QAAQ,EAAE,GAAG;MAAEC,OAAO,EAAE;IAAmB,CAAC,CAAC;AACxF,oBAAoB,CAACP,QAAQ,CAACQ,GAAG,CAAC,CAACC,MAAM,EAACC,SAAS,KAC3B,CAAC,QAAQ,CAAC,UAAU,CAAC,YAAY,CAAC,GAAG,CAAC,CAACA,SAAS,CAAC;AACzE,wBAAwB,CAAC,cAAc;AACvC,4BAA4B,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAACD,MAAM,CAACE,QAAQ,CAAC;AAChE,wBAAwB,EAAE,cAAc;AACxC,wBAAwB,CAAC,YAAY,CACT,OAAO,CAAC,CAACF,MAAM,CAACG,IAAI,CAAC,CACrB,SAAS,CAAC,CACV,CAAC,KAAK,CAAC,QAAQ;AAC3C,gCAAgC,CAAC,UAAU,CACP,EAAE,CAAC,CAAC;YAAEC,OAAO,EAAE;UAAS,CAAC,CAAC,CAC1B,SAAS,CAAC,MAAM,CAChB,OAAO,CAAC,OAAO,CACf,KAAK,CAAC,cAAc;AAExD,oCAAoC,CAACJ,MAAM,CAACK,KAAK;AACjD,gCAAgC,EAAE,UAAU;AAC5C,4BAA4B,EAAE,KAAK,CAAC,QAAQ,CAAC,CAChB,CACJ,EAAE,YAAY,CAAC;AACxC,oBAAoB,EAAE,QAAQ,CACT,CAAC,CAAC;AACvB,gBAAgB,EAAE,IAAI;AACtB,IAAI,EAAE,GAAG,CAAC;AAEV,CAAC;;AAEW;AACJ;AACA;AACA;AACA;AACA;AAAA,GAxCKf,WAAW;EAAA,QACJR,UAAU;AAAA;AAAA,KADjBQ,WAAW;AAAA;AAAA"},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/okorumdev/Documentos/meteor/meteor-wallet","root":"/home/okorumdev/Documentos/meteor/meteor-wallet","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/home/okorumdev/Documentos/meteor/meteor-wallet/imports/ui/ContactList.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/ContactList.jsx"}},"code":"!function (module1) {\n  module1.export({\n    ContactList: () => ContactList\n  });\n  let React;\n  module1.link(\"react\", {\n    default(v) {\n      React = v;\n    }\n  }, 0);\n  let ContactsCollection;\n  module1.link(\"../api/ContactsCollection\", {\n    default(v) {\n      ContactsCollection = v;\n    }\n  }, 1);\n  let useTracker;\n  module1.link(\"meteor/react-meteor-data\", {\n    useTracker(v) {\n      useTracker = v;\n    }\n  }, 2);\n  let List;\n  module1.link(\"@mui/material/List\", {\n    default(v) {\n      List = v;\n    }\n  }, 3);\n  let ListItem;\n  module1.link(\"@mui/material/ListItem\", {\n    default(v) {\n      ListItem = v;\n    }\n  }, 4);\n  let Divider;\n  module1.link(\"@mui/material/Divider\", {\n    default(v) {\n      Divider = v;\n    }\n  }, 5);\n  let ListItemText;\n  module1.link(\"@mui/material/ListItemText\", {\n    default(v) {\n      ListItemText = v;\n    }\n  }, 6);\n  let ListItemAvatar;\n  module1.link(\"@mui/material/ListItemAvatar\", {\n    default(v) {\n      ListItemAvatar = v;\n    }\n  }, 7);\n  let Avatar;\n  module1.link(\"@mui/material/Avatar\", {\n    default(v) {\n      Avatar = v;\n    }\n  }, 8);\n  let Typography;\n  module1.link(\"@mui/material/Typography\", {\n    default(v) {\n      Typography = v;\n    }\n  }, 9);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  var _s = $RefreshSig$();\n  const ContactList = () => {\n    _s();\n    const contacts = useTracker(() => {\n      return ContactsCollection.find({}, {\n        sort: {\n          createdAt: -1\n        }\n      }).fetch(); //Tracker \n    });\n\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h3\", null, \"Contact List\"), /*#__PURE__*/React.createElement(List, {\n      sx: {\n        width: '100%',\n        maxWidth: 360,\n        bgcolor: 'background.paper'\n      }\n    }, contacts.map((person, personIdx) => /*#__PURE__*/React.createElement(ListItem, {\n      alignItems: \"flex-start\",\n      key: personIdx\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, null, /*#__PURE__*/React.createElement(Avatar, {\n      alt: \"\",\n      src: person.imageURL\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: person.name,\n      secondary: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n        sx: {\n          display: 'inline'\n        },\n        component: \"span\",\n        variant: \"body2\",\n        color: \"text.primary\"\n      }, person.email))\n    })))));\n  };\n  // <>\n  //     <h3>Contact List</h3>\n  //     {contacts.map(contact => (\n  //         <li key ={contact.email}>{contact.name} - {contact.email}</li>\n  //     ))}\n  // </>\n  _s(ContactList, \"3eL2hajkH7T/yYuDAR4jjQdxS1Q=\", false, function () {\n    return [useTracker];\n  });\n  _c = ContactList;\n  var _c;\n  $RefreshReg$(_c, \"ContactList\");\n}.call(this, module);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAYO,MAAMA,WAAW,GAAG,MAAM;IAAAC;IAC7B,MAAMC,QAAQ,GAAEC,UAAU,CAAC,MAAM;MAC/B,OAAOC,kBAAkB,CAACC,IAAI,CAAC,CAAC,CAAC,EAAG;QAACC,IAAI,EAAE;UAAEC,SAAS,EAAE,CAAC;QAAE;MAAC,CAAC,CAAC,CAACC,KAAK,EAAE,CAAC,CAAC;IAC1E,CAAC,CAAC;;IACF,oBACI,8CACI,gCAAI,cAAY,CAAI,eAChB,oBAAC,IAAI;MAAC,EAAE,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,QAAQ,EAAE,GAAG;QAAEC,OAAO,EAAE;MAAmB;IAAE,GACnET,QAAQ,CAACU,GAAG,CAAC,CAACC,MAAM,EAACC,SAAS,kBAC3B,oBAAC,QAAQ;MAAC,UAAU,EAAC,YAAY;MAAC,GAAG,EAAEA;IAAU,gBACjD,oBAAC,cAAc,qBACX,oBAAC,MAAM;MAAC,GAAG,EAAC,EAAE;MAAC,GAAG,EAAED,MAAM,CAACE;IAAS,GACxB,eAChB,oBAAC,YAAY;MACT,OAAO,EAAEF,MAAM,CAACG,IAAK;MACrB,SAAS,eACT,oBAAC,KAAK,CAAC,QAAQ,qBACX,oBAAC,UAAU;QACP,EAAE,EAAE;UAAEC,OAAO,EAAE;QAAS,CAAE;QAC1B,SAAS,EAAC,MAAM;QAChB,OAAO,EAAC,OAAO;QACf,KAAK,EAAC;MAAc,GAEnBJ,MAAM,CAACK,KAAK,CACL;IAEf,EACW,CAEnB,CAAC,CACA,CACZ;EAEV,CAAC;EAEW;EACJ;EACA;EACA;EACA;EACA;EAAAjB,GAxCKD,WAAW;IAAA,QACJG,UAAU;EAAA;EAAAgB,KADjBnB,WAAW;EAAA;EAAAoB;AAAA","names":["ContactList","_s","contacts","useTracker","ContactsCollection","find","sort","createdAt","fetch","width","maxWidth","bgcolor","map","person","personIdx","imageURL","name","display","email","_c","$RefreshReg$"],"sources":["imports/ui/ContactList.jsx"],"sourcesContent":["import React from \"react\";\nimport ContactsCollection from \"../api/ContactsCollection\";\nimport { useTracker } from 'meteor/react-meteor-data';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\n\n\nexport const ContactList = () => {\n    const contacts= useTracker(() => {\n      return ContactsCollection.find({},  {sort: { createdAt: -1 }}).fetch(); //Tracker \n    });\n    return (    \n        <div>\n            <h3>Contact List</h3>\n                <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n                    {contacts.map((person,personIdx) => (\n                        <ListItem alignItems=\"flex-start\" key={personIdx}>\n                        <ListItemAvatar>\n                            <Avatar alt=\"\" src={person.imageURL}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={person.name}\n                            secondary={\n                            <React.Fragment>\n                                <Typography\n                                    sx={{ display: 'inline' }}\n                                    component=\"span\"\n                                    variant=\"body2\"\n                                    color=\"text.primary\"\n                                    >\n                                    {person.email}\n                                </Typography>\n                            </React.Fragment>\n                            }\n                        ></ListItemText>    \n                    </ListItem>\n                    ))}                  \n                </List>\n    </div>\n    )\n}\n      \n            // <>\n        //     <h3>Contact List</h3>\n        //     {contacts.map(contact => (\n        //         <li key ={contact.email}>{contact.name} - {contact.email}</li>\n        //     ))}\n        // </>"]},"sourceType":"module","externalDependencies":{},"hash":"0b23f1a9070ad1fc497f0213a88c8a74e40403b3"}
