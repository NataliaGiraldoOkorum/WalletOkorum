{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/okorumdev/Documentos/meteor/meteor-wallet/imports/ui/ContactList.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/ui/ContactList.jsx","filename":"/home/okorumdev/Documentos/meteor/meteor-wallet/imports/ui/ContactList.jsx","inputSourceMap":{"version":3,"names":["React","memo","ContactsCollection","useSubscribe","useFind","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","IconButton","DeleteIcon","ContactList","isLoading","contacts","find","sort","createdAt","removeContact","event","_id","preventDefault","Meteor","call","contactId","ContactItem","contact","imageURL","name","display","email","width","maxWidth","bgcolor","map"],"sources":["imports/ui/ContactList.jsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport ContactsCollection from \"../api/ContactsCollection\";\nimport {useSubscribe, useFind} from 'meteor/react-meteor-data';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n\n\n\nexport const ContactList = () => {\n    const isLoading = useSubscribe('allContacts');\n    const contacts  = useFind( () => {\n        return ContactsCollection.find({}, { sort: { createdAt: -1 } });\n    })\n\n    // const contacts = useTracker(() => {\n    //     return ContactsCollection.find({}, { sort: { createdAt: -1 } }).fetch(); //Tracker \n    // });\n\n    const removeContact = (event, _id) => {\n        event.preventDefault();  \n        Meteor.call('contacts.remove', { contactId:_id});\n    }\n\n\n    if(isLoading()) {\n        return <p>Loading...</p>\n    }\n\n    const ContactItem = memo(({contact}) =>(\n        <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar>\n                <Avatar alt=\"\" src={contact.imageURL} />\n            </ListItemAvatar>\n            <ListItemText\n                primary={contact.name}\n                secondary={<React.Fragment>\n                    <Typography\n                        sx={{ display: 'inline' }}\n                        component=\"span\"\n                        variant=\"body3\"\n                        color=\"text.primary\"\n                    >\n                        {contact.email}\n                    </Typography>\n                    <IconButton aria-label=\"delete\" onClick={(event) => removeContact(event, contact._id)}>\n                        <DeleteIcon />\n\n                    </IconButton>\n                </React.Fragment>}\n            ></ListItemText>\n        </ListItem>\n    ));\n\n    return (\n        <div>\n            <h3>Contact List</h3>\n            <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n                {contacts.map((contact) => (\n                   <ContactItem key={contact._id} contact={contact} />\n                ))}\n            </List>\n        </div>\n    )\n}\n\n            // <>\n        //     <h3>Contact List</h3>\n        //     {contacts.map(contact => (\n        //         <li key ={contact.email}>{contact.name} - {contact.email}</li>\n        //     ))}\n        // </>"],"mappings":"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"},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/okorumdev/Documentos/meteor/meteor-wallet","root":"/home/okorumdev/Documentos/meteor/meteor-wallet","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/home/okorumdev/Documentos/meteor/meteor-wallet/imports/ui/ContactList.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/ContactList.jsx"}},"code":"!function (module1) {\n  module1.export({\n    ContactList: () => ContactList\n  });\n  let React, memo;\n  module1.link(\"react\", {\n    default(v) {\n      React = v;\n    },\n    memo(v) {\n      memo = v;\n    }\n  }, 0);\n  let ContactsCollection;\n  module1.link(\"../api/ContactsCollection\", {\n    default(v) {\n      ContactsCollection = v;\n    }\n  }, 1);\n  let useSubscribe, useFind;\n  module1.link(\"meteor/react-meteor-data\", {\n    useSubscribe(v) {\n      useSubscribe = v;\n    },\n    useFind(v) {\n      useFind = v;\n    }\n  }, 2);\n  let List;\n  module1.link(\"@mui/material/List\", {\n    default(v) {\n      List = v;\n    }\n  }, 3);\n  let ListItem;\n  module1.link(\"@mui/material/ListItem\", {\n    default(v) {\n      ListItem = v;\n    }\n  }, 4);\n  let Divider;\n  module1.link(\"@mui/material/Divider\", {\n    default(v) {\n      Divider = v;\n    }\n  }, 5);\n  let ListItemText;\n  module1.link(\"@mui/material/ListItemText\", {\n    default(v) {\n      ListItemText = v;\n    }\n  }, 6);\n  let ListItemAvatar;\n  module1.link(\"@mui/material/ListItemAvatar\", {\n    default(v) {\n      ListItemAvatar = v;\n    }\n  }, 7);\n  let Avatar;\n  module1.link(\"@mui/material/Avatar\", {\n    default(v) {\n      Avatar = v;\n    }\n  }, 8);\n  let Typography;\n  module1.link(\"@mui/material/Typography\", {\n    default(v) {\n      Typography = v;\n    }\n  }, 9);\n  let IconButton;\n  module1.link(\"@mui/material/IconButton\", {\n    default(v) {\n      IconButton = v;\n    }\n  }, 10);\n  let DeleteIcon;\n  module1.link(\"@mui/icons-material/Delete\", {\n    default(v) {\n      DeleteIcon = v;\n    }\n  }, 11);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  var _s = $RefreshSig$();\n  const ContactList = () => {\n    _s();\n    const isLoading = useSubscribe('allContacts');\n    const contacts = useFind(() => {\n      return ContactsCollection.find({}, {\n        sort: {\n          createdAt: -1\n        }\n      });\n    });\n\n    // const contacts = useTracker(() => {\n    //     return ContactsCollection.find({}, { sort: { createdAt: -1 } }).fetch(); //Tracker \n    // });\n\n    const removeContact = (event, _id) => {\n      event.preventDefault();\n      Meteor.call('contacts.remove', {\n        contactId: _id\n      });\n    };\n    if (isLoading()) {\n      return /*#__PURE__*/React.createElement(\"p\", null, \"Loading...\");\n    }\n    const ContactItem = /*#__PURE__*/memo(_ref => {\n      let {\n        contact\n      } = _ref;\n      return /*#__PURE__*/React.createElement(ListItem, {\n        alignItems: \"flex-start\"\n      }, /*#__PURE__*/React.createElement(ListItemAvatar, null, /*#__PURE__*/React.createElement(Avatar, {\n        alt: \"\",\n        src: contact.imageURL\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: contact.name,\n        secondary: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n          sx: {\n            display: 'inline'\n          },\n          component: \"span\",\n          variant: \"body3\",\n          color: \"text.primary\"\n        }, contact.email), /*#__PURE__*/React.createElement(IconButton, {\n          \"aria-label\": \"delete\",\n          onClick: event => removeContact(event, contact._id)\n        }, /*#__PURE__*/React.createElement(DeleteIcon, null)))\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h3\", null, \"Contact List\"), /*#__PURE__*/React.createElement(List, {\n      sx: {\n        width: '100%',\n        maxWidth: 360,\n        bgcolor: 'background.paper'\n      }\n    }, contacts.map(contact => /*#__PURE__*/React.createElement(ContactItem, {\n      key: contact._id,\n      contact: contact\n    }))));\n  };\n  // <>\n  //     <h3>Contact List</h3>\n  //     {contacts.map(contact => (\n  //         <li key ={contact.email}>{contact.name} - {contact.email}</li>\n  //     ))}\n  // </>\n  _s(ContactList, \"is2fGqBKKCEulJxx0fGg6MRwA10=\", false, function () {\n    return [useSubscribe, useFind];\n  });\n  _c = ContactList;\n  var _c;\n  $RefreshReg$(_c, \"ContactList\");\n}.call(this, module);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAgBO,MAAMA,WAAW,GAAG,MAAM;IAAAC;IAC7B,MAAMC,SAAS,GAAGC,YAAY,CAAC,aAAa,CAAC;IAC7C,MAAMC,QAAQ,GAAIC,OAAO,CAAE,MAAM;MAC7B,OAAOC,kBAAkB,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE;QAAEC,IAAI,EAAE;UAAEC,SAAS,EAAE,CAAC;QAAE;MAAE,CAAC,CAAC;IACnE,CAAC,CAAC;;IAEF;IACA;IACA;;IAEA,MAAMC,aAAa,GAAG,CAACC,KAAK,EAAEC,GAAG,KAAK;MAClCD,KAAK,CAACE,cAAc,EAAE;MACtBC,MAAM,CAACC,IAAI,CAAC,iBAAiB,EAAE;QAAEC,SAAS,EAACJ;MAAG,CAAC,CAAC;IACpD,CAAC;IAGD,IAAGV,SAAS,EAAE,EAAE;MACZ,oBAAO,+BAAG,YAAU,CAAI;IAC5B;IAEA,MAAMe,WAAW,gBAAGC,IAAI,CAAC;MAAA,IAAC;QAACC;MAAO,CAAC;MAAA,oBAC/B,oBAAC,QAAQ;QAAC,UAAU,EAAC;MAAY,gBAC7B,oBAAC,cAAc,qBACX,oBAAC,MAAM;QAAC,GAAG,EAAC,EAAE;QAAC,GAAG,EAAEA,OAAO,CAACC;MAAS,GACzB,eAChB,oBAAC,YAAY;QACT,OAAO,EAAED,OAAO,CAACE,IAAK;QACtB,SAAS,eAAE,oBAAC,KAAK,CAAC,QAAQ,qBACtB,oBAAC,UAAU;UACP,EAAE,EAAE;YAAEC,OAAO,EAAE;UAAS,CAAE;UAC1B,SAAS,EAAC,MAAM;UAChB,OAAO,EAAC,OAAO;UACf,KAAK,EAAC;QAAc,GAEnBH,OAAO,CAACI,KAAK,CACN,eACZ,oBAAC,UAAU;UAAC,cAAW,QAAQ;UAAC,OAAO,EAAGZ,KAAK,IAAKD,aAAa,CAACC,KAAK,EAAEQ,OAAO,CAACP,GAAG;QAAE,gBAClF,oBAAC,UAAU,QAEH;MACE,EACP,CAEtB;IAAA,EAAC;IAEF,oBACI,8CACI,gCAAI,cAAY,CAAI,eACpB,oBAAC,IAAI;MAAC,EAAE,EAAE;QAAEY,KAAK,EAAE,MAAM;QAAEC,QAAQ,EAAE,GAAG;QAAEC,OAAO,EAAE;MAAmB;IAAE,GACnEtB,QAAQ,CAACuB,GAAG,CAAER,OAAO,iBACnB,oBAAC,WAAW;MAAC,GAAG,EAAEA,OAAO,CAACP,GAAI;MAAC,OAAO,EAAEO;IAAQ,EAClD,CAAC,CACA,CACJ;EAEd,CAAC;EAEW;EACJ;EACA;EACA;EACA;EACA;EAAAlB,GA9DKD,WAAW;IAAA,QACFG,YAAY,EACZE,OAAO;EAAA;EAAAuB,KAFhB5B,WAAW;EAAA;EAAA6B;AAAA","names":["ContactList","_s","isLoading","useSubscribe","contacts","useFind","ContactsCollection","find","sort","createdAt","removeContact","event","_id","preventDefault","Meteor","call","contactId","ContactItem","memo","contact","imageURL","name","display","email","width","maxWidth","bgcolor","map","_c","$RefreshReg$"],"sources":["imports/ui/ContactList.jsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport ContactsCollection from \"../api/ContactsCollection\";\nimport {useSubscribe, useFind} from 'meteor/react-meteor-data';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n\n\n\nexport const ContactList = () => {\n    const isLoading = useSubscribe('allContacts');\n    const contacts  = useFind( () => {\n        return ContactsCollection.find({}, { sort: { createdAt: -1 } });\n    })\n\n    // const contacts = useTracker(() => {\n    //     return ContactsCollection.find({}, { sort: { createdAt: -1 } }).fetch(); //Tracker \n    // });\n\n    const removeContact = (event, _id) => {\n        event.preventDefault();  \n        Meteor.call('contacts.remove', { contactId:_id});\n    }\n\n\n    if(isLoading()) {\n        return <p>Loading...</p>\n    }\n\n    const ContactItem = memo(({contact}) =>(\n        <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar>\n                <Avatar alt=\"\" src={contact.imageURL} />\n            </ListItemAvatar>\n            <ListItemText\n                primary={contact.name}\n                secondary={<React.Fragment>\n                    <Typography\n                        sx={{ display: 'inline' }}\n                        component=\"span\"\n                        variant=\"body3\"\n                        color=\"text.primary\"\n                    >\n                        {contact.email}\n                    </Typography>\n                    <IconButton aria-label=\"delete\" onClick={(event) => removeContact(event, contact._id)}>\n                        <DeleteIcon />\n\n                    </IconButton>\n                </React.Fragment>}\n            ></ListItemText>\n        </ListItem>\n    ));\n\n    return (\n        <div>\n            <h3>Contact List</h3>\n            <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n                {contacts.map((contact) => (\n                   <ContactItem key={contact._id} contact={contact} />\n                ))}\n            </List>\n        </div>\n    )\n}\n\n            // <>\n        //     <h3>Contact List</h3>\n        //     {contacts.map(contact => (\n        //         <li key ={contact.email}>{contact.name} - {contact.email}</li>\n        //     ))}\n        // </>"]},"sourceType":"module","externalDependencies":{},"hash":"8a6f1211b2e0504503027fff60038c6abff89ea6"}
