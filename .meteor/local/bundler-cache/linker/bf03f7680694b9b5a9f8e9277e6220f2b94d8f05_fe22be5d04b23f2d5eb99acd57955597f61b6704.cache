[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"ContactsCollection.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// imports/api/ContactsCollection.js                                         //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n}, 0);\nmodule.exportDefault(ContactsCollection = new Mongo.Collection('contacts'));\n///////////////////////////////////////////////////////////////////////////////\n\n},\"ContactsMethods.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// imports/api/ContactsMethods.js                                            //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\nlet ContactsCollection;\nmodule.link(\"./ContactsCollection\", {\n  ContactsCollection(v) {\n    ContactsCollection = v;\n  }\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 1);\nMeteor.methods({\n  \"contacts.insert\"(_ref) {\n    let {\n      name,\n      email,\n      imageURL\n    } = _ref;\n    if (!name) {\n      throw new Meteor.Error(\"Name is required\");\n    }\n    return ContactsCollection.insert({\n      name,\n      email,\n      imageURL\n    });\n  }\n});\n///////////////////////////////////////////////////////////////////////////////\n\n}}},\"server\":{\"main.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// server/main.js                                                            //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 0);\nmodule.link(\"../imports/api/ContactsCollection\");\nmodule.link(\"../imports/api/ContactsMethods\");\nMeteor.startup(() => {});\n///////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".ts\",\n    \".mjs\",\n    \".jsx\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","hash":"70ac102aa941ae126456927c0bdbf526a9c67c33","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/ContactsCollection.js","imports/api/ContactsMethods.js","server/main.js"],"names":["Mongo","module","link","v","exportDefault","ContactsCollection","Collection","Meteor","methods","name","email","imageURL","Error","insert","startup"],"mappings":";;;;;;;;AAAA,IAAIA,KAAK;AAACC,MAAM,CAACC,IAAI,CAAC,cAAc,EAAC;EAACF,KAAK,CAACG,CAAC,EAAC;IAACH,KAAK,GAACG,CAAC;EAAA;AAAC,CAAC,EAAC,CAAC,CAAC;AAA3DF,MAAM,CAACG,aAAa,CAELC,kBAAkB,GAAG,IAAIL,KAAK,CAACM,UAAU,CAAC,UAAU,CAAC,CAF3C,C;;;;;;;;;;;ACAzB,IAAID,kBAAkB;AAACJ,MAAM,CAACC,IAAI,CAAC,sBAAsB,EAAC;EAACG,kBAAkB,CAACF,CAAC,EAAC;IAACE,kBAAkB,GAACF,CAAC;EAAA;AAAC,CAAC,EAAC,CAAC,CAAC;AAAC,IAAII,MAAM;AAACN,MAAM,CAACC,IAAI,CAAC,eAAe,EAAC;EAACK,MAAM,CAACJ,CAAC,EAAC;IAACI,MAAM,GAACJ,CAAC;EAAA;AAAC,CAAC,EAAC,CAAC,CAAC;AAG1KI,MAAM,CAACC,OAAO,CAAC;EACX,iBAAiB,OAA4B;IAAA,IAA3B;MAAEC,IAAI;MAAEC,KAAK;MAAEC;IAAS,CAAC;IACvC,IAAI,CAACF,IAAI,EAAE;MACP,MAAM,IAAIF,MAAM,CAACK,KAAK,CAAC,kBAAkB,CAAC;IAC9C;IACA,OAAOP,kBAAkB,CAACQ,MAAM,CAAC;MAAEJ,IAAI;MAAEC,KAAK;MAAEC;IAAS,CAAC,CAAC;EAC/D;AACJ,CAAC,CAAC,C;;;;;;;;;;;ACVF,IAAIJ,MAAM;AAACN,MAAM,CAACC,IAAI,CAAC,eAAe,EAAC;EAACK,MAAM,CAACJ,CAAC,EAAC;IAACI,MAAM,GAACJ,CAAC;EAAA;AAAC,CAAC,EAAC,CAAC,CAAC;AAACF,MAAM,CAACC,IAAI,CAAC,mCAAmC,CAAC;AAACD,MAAM,CAACC,IAAI,CAAC,gCAAgC,CAAC;AAI9JK,MAAM,CAACO,OAAO,CAAC,MAAM,CAErB,CAAC,CAAC,C","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nexport default ContactsCollection = new Mongo.Collection('contacts');","import {ContactsCollection} from \"./ContactsCollection\";\nimport { Meteor } from 'meteor/meteor';\n\nMeteor.methods({\n    \"contacts.insert\"({ name, email, imageURL }) {\n        if (!name) {\n            throw new Meteor.Error(\"Name is required\");\n        }\n        return ContactsCollection.insert({ name, email, imageURL });\n    }\n})\n","import { Meteor } from 'meteor/meteor';\nimport \"../imports/api/ContactsCollection\";\nimport \"../imports/api/ContactsMethods\";\n\nMeteor.startup(() => {\n\n});\n"]}}]