[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"ui\":{\"components\":{\"ErrorAlert.jsx\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// imports/ui/components/ErrorAlert.jsx                                                                           //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n!function (module1) {\n  let React;\n  module1.link(\"react\", {\n    \"*\"(v) {\n      React = v;\n    }\n  }, 0);\n  let Alert;\n  module1.link(\"@mui/material/Alert\", {\n    default(v) {\n      Alert = v;\n    }\n  }, 1);\n  let Stack;\n  module1.link(\"@mui/material/Stack\", {\n    default(v) {\n      Stack = v;\n    }\n  }, 2);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  module1.exportDefault(ErrorAlert = _ref => {\n    let {\n      message\n    } = _ref;\n    return /*#__PURE__*/React.createElement(Stack, {\n      sx: {\n        width: '100%'\n      },\n      spacing: 2\n    }, /*#__PURE__*/React.createElement(Alert, {\n      severity: \"error\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \" \", message, \" \")));\n  });\n}.call(this, module);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"SuccessAlert.jsx\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// imports/ui/components/SuccessAlert.jsx                                                                         //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n!function (module1) {\n  let React;\n  module1.link(\"react\", {\n    \"*\"(v) {\n      React = v;\n    }\n  }, 0);\n  let Alert;\n  module1.link(\"@mui/material/Alert\", {\n    default(v) {\n      Alert = v;\n    }\n  }, 1);\n  let Stack;\n  module1.link(\"@mui/material/Stack\", {\n    default(v) {\n      Stack = v;\n    }\n  }, 2);\n  let AlertTitle;\n  module1.link(\"@mui/material/AlertTitle\", {\n    default(v) {\n      AlertTitle = v;\n    }\n  }, 3);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  module1.exportDefault(SuccessAlerts = _ref => {\n    let {\n      message\n    } = _ref;\n    return /*#__PURE__*/React.createElement(Stack, {\n      sx: {\n        width: '100%'\n      },\n      spacing: 2\n    }, /*#__PURE__*/React.createElement(Alert, {\n      severity: \"success\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \" \", message, \" \")));\n  });\n}.call(this, module);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"App.jsx\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// imports/ui/App.jsx                                                                                             //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n!function (module1) {\n  module1.export({\n    App: () => App\n  });\n  let React;\n  module1.link(\"react\", {\n    default(v) {\n      React = v;\n    }\n  }, 0);\n  let ButtonAppBar;\n  module1.link(\"./ButtonAppBar\", {\n    default(v) {\n      ButtonAppBar = v;\n    }\n  }, 1);\n  let ContactForm;\n  module1.link(\"./ContactForm\", {\n    ContactForm(v) {\n      ContactForm = v;\n    }\n  }, 2);\n  let ContactList;\n  module1.link(\"./ContactList\", {\n    ContactList(v) {\n      ContactList = v;\n    }\n  }, 3);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  const App = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(ButtonAppBar, null), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Wallet, null), /*#__PURE__*/React.createElement(ContactForm, null), /*#__PURE__*/React.createElement(ContactList, null))));\n  _c = App;\n  var _c;\n  $RefreshReg$(_c, \"App\");\n}.call(this, module);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ButtonAppBar.jsx\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// imports/ui/ButtonAppBar.jsx                                                                                    //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n!function (module1) {\n  module1.export({\n    default: () => ButtonAppBar\n  });\n  let React;\n  module1.link(\"react\", {\n    \"*\"(v) {\n      React = v;\n    }\n  }, 0);\n  let AppBar;\n  module1.link(\"@mui/material/AppBar\", {\n    default(v) {\n      AppBar = v;\n    }\n  }, 1);\n  let Box;\n  module1.link(\"@mui/material/Box\", {\n    default(v) {\n      Box = v;\n    }\n  }, 2);\n  let Toolbar;\n  module1.link(\"@mui/material/Toolbar\", {\n    default(v) {\n      Toolbar = v;\n    }\n  }, 3);\n  let Typography;\n  module1.link(\"@mui/material/Typography\", {\n    default(v) {\n      Typography = v;\n    }\n  }, 4);\n  let Button;\n  module1.link(\"@mui/material/Button\", {\n    default(v) {\n      Button = v;\n    }\n  }, 5);\n  let IconButton;\n  module1.link(\"@mui/material/IconButton\", {\n    default(v) {\n      IconButton = v;\n    }\n  }, 6);\n  let MenuIcon;\n  module1.link(\"@mui/icons-material/Menu\", {\n    default(v) {\n      MenuIcon = v;\n    }\n  }, 7);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  function ButtonAppBar() {\n    return /*#__PURE__*/React.createElement(Box, {\n      sx: {\n        flexGrow: 1\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      position: \"static\"\n    }, /*#__PURE__*/React.createElement(Toolbar, null, /*#__PURE__*/React.createElement(IconButton, {\n      size: \"large\",\n      edge: \"start\",\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      sx: {\n        mr: 2\n      }\n    }, /*#__PURE__*/React.createElement(MenuIcon, null)), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"div\",\n      sx: {\n        flexGrow: 1\n      }\n    }, \"News\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"inherit\"\n    }, \"Login\"))));\n  }\n  _c = ButtonAppBar;\n  var _c;\n  $RefreshReg$(_c, \"ButtonAppBar\");\n}.call(this, module);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ContactForm.jsx\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// imports/ui/ContactForm.jsx                                                                                     //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n!function (module1) {\n  module1.export({\n    ContactForm: () => ContactForm\n  });\n  let React, useState;\n  module1.link(\"react\", {\n    default(v) {\n      React = v;\n    },\n    useState(v) {\n      useState = v;\n    }\n  }, 0);\n  let Meteor;\n  module1.link(\"meteor/meteor\", {\n    Meteor(v) {\n      Meteor = v;\n    }\n  }, 1);\n  let ErrorAlert;\n  module1.link(\"./components/ErrorAlert\", {\n    default(v) {\n      ErrorAlert = v;\n    }\n  }, 2);\n  let SuccessAlert;\n  module1.link(\"./components/SuccessAlert\", {\n    default(v) {\n      SuccessAlert = v;\n    }\n  }, 3);\n  let Button;\n  module1.link(\"@mui/material/Button\", {\n    default(v) {\n      Button = v;\n    }\n  }, 4);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  var _s = $RefreshSig$();\n  const ContactForm = () => {\n    _s();\n    const [name, setName] = useState(\"\"); //formik\n    const [email, setEmail] = useState(\"\");\n    const [imageURL, setImageURL] = useState(\"\");\n    const [error, setError] = React.useState(\"\");\n    const [success, setSuccess] = React.useState(\"\");\n    const showError = _ref => {\n      let {\n        message\n      } = _ref;\n      setError(message);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    };\n    const showSuccess = _ref2 => {\n      let {\n        message\n      } = _ref2;\n      setSuccess(message);\n      setTimeout(() => {\n        setSuccess(\"\");\n      }, 5000);\n    };\n    const saveContact = () => {\n      //console.log({ name, email, imageURL });\n      //ContactsCollection.insert({ name, email, imageURL })\n      Meteor.call('contacts.insert', {\n        name,\n        email,\n        imageURL\n      }, errorResponse => {\n        if (errorResponse) {\n          showError({\n            message: errorResponse.error\n          });\n        } else {\n          setName(\"\");\n          setEmail(\"\");\n          setImageURL(\"\");\n          showSuccess({\n            message: \"contact save\"\n          });\n        }\n      });\n    };\n    return /*#__PURE__*/React.createElement(\"form\", null, error && /*#__PURE__*/React.createElement(ErrorAlert, {\n      message: error\n    }), success && /*#__PURE__*/React.createElement(SuccessAlert, {\n      message: success\n    }), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\"\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"name\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      type: \"text\"\n    })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\"\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      id: \"email\"\n    })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"imageURL\"\n    }, \"Image URL\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: imageURL,\n      onChange: e => setImageURL(e.target.value),\n      id: \"imageURL\"\n    })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: saveContact\n    }, \"Save Contact\")));\n  };\n  _s(ContactForm, \"ADAO4xB4ANhW0+zsIGUTfmpNRTA=\");\n  _c = ContactForm;\n  var _c;\n  $RefreshReg$(_c, \"ContactForm\");\n}.call(this, module);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ContactList.jsx\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// imports/ui/ContactList.jsx                                                                                     //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n!function (module1) {\n  module1.export({\n    ContactList: () => ContactList\n  });\n  let React, memo;\n  module1.link(\"react\", {\n    default(v) {\n      React = v;\n    },\n    memo(v) {\n      memo = v;\n    }\n  }, 0);\n  let ContactsCollection;\n  module1.link(\"../api/ContactsCollection\", {\n    default(v) {\n      ContactsCollection = v;\n    }\n  }, 1);\n  let useSubscribe, useFind;\n  module1.link(\"meteor/react-meteor-data\", {\n    useSubscribe(v) {\n      useSubscribe = v;\n    },\n    useFind(v) {\n      useFind = v;\n    }\n  }, 2);\n  let List;\n  module1.link(\"@mui/material/List\", {\n    default(v) {\n      List = v;\n    }\n  }, 3);\n  let ListItem;\n  module1.link(\"@mui/material/ListItem\", {\n    default(v) {\n      ListItem = v;\n    }\n  }, 4);\n  let ListItemText;\n  module1.link(\"@mui/material/ListItemText\", {\n    default(v) {\n      ListItemText = v;\n    }\n  }, 5);\n  let ListItemAvatar;\n  module1.link(\"@mui/material/ListItemAvatar\", {\n    default(v) {\n      ListItemAvatar = v;\n    }\n  }, 6);\n  let Avatar;\n  module1.link(\"@mui/material/Avatar\", {\n    default(v) {\n      Avatar = v;\n    }\n  }, 7);\n  let Typography;\n  module1.link(\"@mui/material/Typography\", {\n    default(v) {\n      Typography = v;\n    }\n  }, 8);\n  let IconButton;\n  module1.link(\"@mui/material/IconButton\", {\n    default(v) {\n      IconButton = v;\n    }\n  }, 9);\n  let DeleteIcon;\n  module1.link(\"@mui/icons-material/Delete\", {\n    default(v) {\n      DeleteIcon = v;\n    }\n  }, 10);\n  let Box;\n  module1.link(\"@mui/material/Box\", {\n    default(v) {\n      Box = v;\n    }\n  }, 11);\n  let ArchiveIcon;\n  module1.link(\"@mui/icons-material/Archive\", {\n    default(v) {\n      ArchiveIcon = v;\n    }\n  }, 12);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  var _s = $RefreshSig$();\n  const ContactList = () => {\n    _s();\n    const isLoading = useSubscribe('contacts');\n    const contacts = useFind(() => ContactsCollection.find({\n      archived: {\n        $ne: true\n      }\n    }, {\n      sort: {\n        createdAt: -1\n      }\n    }));\n    const archiveContact = (event, _id) => {\n      event.preventDefault();\n      console.log(\"entra a archive\");\n      Meteor.call('contacts.archive', {\n        contactId: _id\n      });\n    };\n    if (isLoading()) {\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h3\", null, \"Loading...\"));\n    }\n    const ContactItem = /*#__PURE__*/memo(_ref => {\n      let {\n        contact\n      } = _ref;\n      return /*#__PURE__*/React.createElement(Box, {\n        sx: {\n          width: 250,\n          height: 90,\n          p: 2,\n          border: '1px dashed grey',\n          '&:hover': {\n            opacity: [0.5, 0.5, 0.5]\n          }\n        }\n      }, /*#__PURE__*/React.createElement(ListItem, {\n        alignItems: \"flex-start\"\n      }, /*#__PURE__*/React.createElement(ListItemAvatar, null, /*#__PURE__*/React.createElement(Avatar, {\n        alt: \"\",\n        src: contact.imageURL\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: contact.name,\n        secondary: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n          sx: {\n            display: 'inline'\n          },\n          component: \"span\",\n          variant: \"body3\",\n          color: \"text.primary\"\n        }, contact.email), /*#__PURE__*/React.createElement(IconButton, {\n          \"aria-label\": \"delete\",\n          onClick: event => archiveContact(event, contact._id)\n        }, /*#__PURE__*/React.createElement(ArchiveIcon, null)))\n      })));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h3\", null, \"Contact List\"), /*#__PURE__*/React.createElement(List, {\n      sx: {\n        width: '100%',\n        maxWidth: 360,\n        bgcolor: 'background.paper'\n      }\n    }, contacts.map(contact => /*#__PURE__*/React.createElement(ContactItem, {\n      key: contact._id,\n      contact: contact\n    }))));\n  };\n  _s(ContactList, \"is2fGqBKKCEulJxx0fGg6MRwA10=\", false, function () {\n    return [useSubscribe, useFind];\n  });\n  _c = ContactList;\n  var _c;\n  $RefreshReg$(_c, \"ContactList\");\n}.call(this, module);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"api\":{\"ContactsCollection.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// imports/api/ContactsCollection.js                                                                              //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n!function (module1) {\n  let Mongo;\n  module1.link(\"meteor/mongo\", {\n    Mongo(v) {\n      Mongo = v;\n    }\n  }, 0);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  module1.exportDefault(ContactsCollection = new Mongo.Collection('contacts'));\n}.call(this, module);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ContactsMethods.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// imports/api/ContactsMethods.js                                                                                 //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n!function (module1) {\n  let ContactsCollection;\n  module1.link(\"./ContactsCollection\", {\n    default(v) {\n      ContactsCollection = v;\n    }\n  }, 0);\n  let Meteor;\n  module1.link(\"meteor/meteor\", {\n    Meteor(v) {\n      Meteor = v;\n    }\n  }, 1);\n  let check;\n  module1.link(\"meteor/check\", {\n    check(v) {\n      check = v;\n    }\n  }, 2);\n  let ImportContactsRounded;\n  module1.link(\"@mui/icons-material\", {\n    ImportContactsRounded(v) {\n      ImportContactsRounded = v;\n    }\n  }, 3);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  Meteor.methods({\n    'contacts.insert'(_ref) {\n      let {\n        name,\n        email,\n        imageURL\n      } = _ref;\n      check(name, String);\n      check(email, String);\n      check(imageURL, String);\n      if (!name) {\n        throw new Meteor.Error(\"Name is required\");\n      }\n      return ContactsCollection.insert({\n        name,\n        email,\n        imageURL,\n        createdAt: new Date()\n      });\n    },\n    'contacts.remove'(_ref2) {\n      let {\n        contactId\n      } = _ref2;\n      check(contactId, String);\n      ContactsCollection.remove(contactId);\n    },\n    'contacts.archive'(_ref3) {\n      let {\n        contactId\n      } = _ref3;\n      check(contactId, String);\n      ContactsCollection.update({\n        _id: contactId\n      }, {\n        $set: {\n          archived: true\n        }\n      });\n    }\n  });\n}.call(this, module);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.jsx\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// client/main.jsx                                                                                                //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n!function (module1) {\n  let React;\n  module1.link(\"react\", {\n    default(v) {\n      React = v;\n    }\n  }, 0);\n  let createRoot;\n  module1.link(\"react-dom/client\", {\n    createRoot(v) {\n      createRoot = v;\n    }\n  }, 1);\n  let Meteor;\n  module1.link(\"meteor/meteor\", {\n    Meteor(v) {\n      Meteor = v;\n    }\n  }, 2);\n  let App;\n  module1.link(\"/imports/ui/App\", {\n    App(v) {\n      App = v;\n    }\n  }, 3);\n  module1.link(\"../imports/api/ContactsMethods\");\n  ___INIT_METEOR_FAST_REFRESH(module);\n  Meteor.startup(() => {\n    const container = document.getElementById('react-target');\n    const root = createRoot(container);\n    root.render( /*#__PURE__*/React.createElement(App, null));\n  });\n}.call(this, module);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".ts\",\n    \".jsx\",\n    \".mjs\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.jsx\");","hash":"16b74da2bcac053315f51f42f9328f9ea46cae33","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/ui/components/ErrorAlert.jsx","imports/ui/components/SuccessAlert.jsx","imports/ui/App.jsx","imports/ui/ButtonAppBar.jsx","imports/ui/ContactForm.jsx","imports/ui/ContactList.jsx","imports/api/ContactsCollection.js","imports/api/ContactsMethods.js","client/main.jsx"],"names":["ErrorAlert","message","width","SuccessAlerts","App","_c","$RefreshReg$","ButtonAppBar","flexGrow","mr","ContactForm","_s","name","setName","useState","email","setEmail","imageURL","setImageURL","error","setError","React","success","setSuccess","showError","setTimeout","showSuccess","saveContact","Meteor","call","errorResponse","e","target","value","ContactList","isLoading","useSubscribe","contacts","useFind","ContactsCollection","find","archived","$ne","sort","createdAt","archiveContact","event","_id","preventDefault","console","log","contactId","ContactItem","memo","contact","height","p","border","opacity","display","maxWidth","bgcolor","map","Mongo","Collection","methods","check","String","Error","insert","Date","remove","update","$set","startup","container","document","getElementById","root","createRoot","render"],"mappings":"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","file":"/app.js","sourcesContent":["import * as React from 'react';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\n\nexport default ErrorAlert = ({ message }) => {\n  return (\n    <Stack sx={{ width: '100%' }} spacing={2}>\n      <Alert severity=\"error\">\n        <strong> { message } </strong>\n      </Alert>\n    </Stack>\n  );\n}","import * as React from 'react';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport AlertTitle from '@mui/material/AlertTitle';\n\nexport default SuccessAlerts = ({ message }) => {\n  return (\n    <Stack sx={{ width: '100%' }} spacing={2}>\n     <Alert severity=\"success\">\n          <strong> { message } </strong>\n      </Alert>\n    </Stack>\n  );\n}","import React from 'react';\nimport ButtonAppBar from './ButtonAppBar';\nimport { ContactForm } from './ContactForm';\nimport { ContactList } from './ContactList';\n\n\n\nexport const App = () => (\n  <>\n  \n    <div>\n      <ButtonAppBar></ButtonAppBar>\n      <div>\n        <Wallet />\n        <ContactForm />\n        <ContactList />\n      </div>\n    </div>\n  </>\n);\n\n\n\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n\nexport default function ButtonAppBar() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            News\n          </Typography>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}","import React, { useState } from 'react';\n//import ContactsCollection from \"../api/ContactsCollection\";\n//import { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\"\nimport { Meteor } from 'meteor/meteor'\nimport ErrorAlert from './components/ErrorAlert';\nimport SuccessAlert from './components/SuccessAlert';\nimport Button from '@mui/material/Button';\n\nexport const ContactForm = () => {     \n  const [name, setName] = useState(\"\");  //formik\n  const [email, setEmail] = useState(\"\");\n  const [imageURL, setImageURL] = useState(\"\");\n  const [error, setError] = React.useState(\"\");\n  const [success, setSuccess] = React.useState(\"\");\n\n  const showError = ({ message }) => {\n    setError(message);\n    setTimeout(() => {\n      setError(\"\")\n    }, 5000);\n  }\n\n  const showSuccess = ({ message }) => {\n    setSuccess(message);\n    setTimeout(() => {\n      setSuccess(\"\")\n    }, 5000);\n  }\n\n  const saveContact = () => {\n    //console.log({ name, email, imageURL });\n    //ContactsCollection.insert({ name, email, imageURL })\n    Meteor.call('contacts.insert', { name, email, imageURL }, (errorResponse) => {\n      if (errorResponse) {\n        showError({ message: errorResponse.error })\n      } else {\n        setName(\"\");\n        setEmail(\"\");\n        setImageURL(\"\");\n        showSuccess({ message: \"contact save\" })\n\n      }\n    });\n\n  }\n\n  return (\n    <form>\n      {error && <ErrorAlert message={error} />}\n      {success && <SuccessAlert message={success} />}\n\n      <div>\n        <label htmlFor=\"name\">\n          Name\n        </label>\n        <input id=\"name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          type=\"text\" />\n      </div>\n      <div>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          id=\"email\" />\n      </div>\n      <div>\n        <label htmlFor=\"imageURL\">Image URL</label>\n        <input\n          type=\"text\"\n          value={imageURL}\n          onChange={(e) => setImageURL(e.target.value)}\n          id=\"imageURL\" />\n      </div>\n      <div>\n      <Button variant=\"contained\" onClick={saveContact}>Save Contact</Button>\n      </div>\n    </form>\n  )\n}","import React, { memo } from \"react\";\nimport ContactsCollection from \"../api/ContactsCollection\";\nimport { useSubscribe, useFind } from 'meteor/react-meteor-data';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Box from '@mui/material/Box';\nimport ArchiveIcon from '@mui/icons-material/Archive';\n\n\nexport const ContactList = () => {\n    const isLoading = useSubscribe('contacts');\n    const contacts = useFind(() => ContactsCollection.find({ archived: { $ne: true }}, { sort: { createdAt: -1 } }));\n\n\n    const archiveContact = (event, _id) => {\n        event.preventDefault();\n        console.log(\"entra a archive\");\n        Meteor.call('contacts.archive', { contactId: _id });\n    }\n\n\n    if (isLoading()) {\n        return (\n        <div>\n            <h3>Loading...</h3>\n        </div>\n        )\n    }\n\n    const ContactItem = memo(({ contact }) => {\n        return (\n            <Box sx={{\n              width: 250,\n              height: 90,\n              p: 2, border: '1px dashed grey',\n              '&:hover': {\n                opacity: [0.5, 0.5, 0.5],           \n              },\n            }}\n          >\n        <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar>\n                <Avatar alt=\"\" src={contact.imageURL} />\n            </ListItemAvatar>\n            <ListItemText\n                primary={contact.name}\n                secondary={<React.Fragment>\n                    <Typography\n                        sx={{ display: 'inline' }}\n                        component=\"span\"\n                        variant=\"body3\"\n                        color=\"text.primary\"\n                    >\n                        {contact.email}\n                    </Typography>\n                    <IconButton aria-label=\"delete\" onClick={(event) => archiveContact(event, contact._id)}>\n                        {/*<DeleteIcon />*/}\n                        <ArchiveIcon />\n                        {/*<BottomNavigationAction label=\"Archive\" icon={<ArchiveIcon />} >Archive</BottomNavigationAction>*/}\n                    </IconButton>\n                </React.Fragment>}\n            ></ListItemText>\n        </ListItem>\n        </Box >\n        )\n    });\n\nreturn (\n    <div>\n        <h3>Contact List</h3>\n        <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n            {contacts.map((contact) => (\n                <ContactItem key={contact._id} contact={contact} />\n            ))}\n        </List>\n    </div>\n)\n}\n","import { Mongo } from 'meteor/mongo';\n\nexport default ContactsCollection = new Mongo.Collection('contacts');","import ContactsCollection from \"./ContactsCollection\";\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport { ImportContactsRounded } from \"@mui/icons-material\";\n\nMeteor.methods({\n   'contacts.insert'({ name, email, imageURL }) {\n        check(name, String);\n        check(email, String);\n        check(imageURL, String);\n        if (!name) {\n            throw new Meteor.Error(\"Name is required\");\n        }\n        return ContactsCollection.insert({ name, email, imageURL, createdAt: new Date() });\n    },\n    'contacts.remove'({contactId}){\n        check(contactId, String);\n        ContactsCollection.remove(contactId);        \n    },\n    'contacts.archive'({ contactId }){\n        check(contactId, String );\n        ContactsCollection.update({ _id: contactId}, {$set: { archived: true}});\n    }\n})\n\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Meteor } from 'meteor/meteor';\nimport { App } from '/imports/ui/App';\nimport \"../imports/api/ContactsMethods\";\n\nMeteor.startup(() => {\n  const container = document.getElementById('react-target');\n  const root = createRoot(container);\n  root.render(<App />);\n});\n"]}}]